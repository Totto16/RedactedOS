name: Build CI

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

env:
  arm_toolchain_version: 14.2.rel1

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}-${{ matrix.config.os-version }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows MingGW
            os: windows
            os-version: 2025
            environment: mingw
            architecture: x86_64
            shell: 'msys2 {0}'
            toolchain_arch: mingw-w64-x86_64

          - name: Linux (ARM64)
            os: ubuntu
            os-version: 24.04-arm
            arm: true
            shell: bash
            toolchain_arch: aarch64

          - name: Linux
            os: ubuntu
            os-version: 24.04
            arm: false
            shell: bash
            toolchain_arch: x86_64

          - name: MacOS
            os: macos
            os-version: 13
            arm: false
            shell: bash
            toolchain_arch: darwin-x86_64

          - name: MacOS (Arm64)
            os: macos
            os-version: 15
            arm: true
            shell: bash
            toolchain_arch: darwin-arm64

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Install MSYS2 Dependencies
        if: matrix.config.os == 'windows' && ( matrix.config.environment == 'mingw')
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.config.environment == 'mingw' && 'MINGW64' || 'UCRT64'}}
          update: true
          install: >-
            mingw-w64-${{matrix.config.architecture}}-pkg-config
            mingw-w64-${{matrix.config.architecture}}-ca-certificates
            mingw-w64-${{matrix.config.architecture}}-make
            mingw-w64-${{matrix.config.architecture}}-cmake
            git

      - name: Install Linux Dependencies
        if: matrix.config.os == 'ubuntu'
        run: |
          sudo apt-get update
          sudo apt-get install make -y --no-install-recommends

      - name: Install MacOS Dependencies
        if: matrix.config.os == 'macos'
        run: |
          brew update
          brew install make

      - name: Install Toolchain (Linux + MacOS)
        if: matrix.config.os != 'windows'
        run: |
            wget "https://developer.arm.com/-/media/Files/downloads/gnu/${{env.arm_toolchain_version}}/binrel/arm-gnu-toolchain-${{env.arm_toolchain_version}}-${{matrix.config.toolchain_arch}}-aarch64-none-elf.tar.xz" -O "toolchain.tar.xz"
            tar -xf toolchain.tar.xz
            mkdir -pv /opt/arm-toolchain
            mv arm-gnu-toolchain-${{env.arm_toolchain_version}}-${{matrix.config.toolchain_arch}}-aarch64-none-elf/ /opt/arm-toolchain/
            echo "/opt/arm-toolchain/bin" >> $GITHUB_PATH

      - name: Install Toolchain (Windows)
        if: matrix.config.os == 'windows'
        run: |
            Invoke-WebRequest -Uri "https://developer.arm.com/-/media/Files/downloads/gnu/${{env.arm_toolchain_version}}/binrel/arm-gnu-toolchain-${{env.arm_toolchain_version}}-${{matrix.config.toolchain_arch}}-aarch64-none-elf.zip" -OutFile "toolchain.zip"
            mkdir "$env:RUNNER_TEMP\arm-toolchain" -Force 
            Expand-Archive -Path "toolchain.zip" -DestinationPath "$env:RUNNER_TEMP\arm-toolchain"
            echo "$env:RUNNER_TEMP\arm-toolchain" | Out-File -FilePath "$env:GITHUB_PATH" -Append

      - name: Build
        run: make all

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.name }} Image
          path: build/src/executables/oopetris* TODO
